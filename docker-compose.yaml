version: "3.9"

services:
  auth_service:
    build:
      context: /home/danil/Рабочий стол/chatRoom/service_auth
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      CONFIG_PATH: /app/conf/conf.env
      REDIS_PASSWORD: ^G#z2v!QeA9pL1uN@k8rS
      KAFKA_BROKERS: kafka:9092
    networks:
      - app-network
    dns:
      - "8.8.8.8"
      - "8.8.4.4"

  notification_service:
    build:
      context: /home/danil/Рабочий стол/chatRoom/notification_service
      dockerfile: dockerfile
    ports:
      - "8081:8080" 
    depends_on:
      kafka:
        condition: service_started
    environment:
      CONFIG_PATH: /app/conf/config.env
      KAFKA_BROKERS: kafka:9092
    networks:
      - app-network
    dns:
      - "8.8.8.8"
      - "8.8.4.4"

  db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres_user
      POSTGRES_PASSWORD: P0stgr3sS3cur3
      POSTGRES_DB: authservice
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres_user -d authservice"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network
    dns:
      - "8.8.8.8"
      - "8.8.4.4"

  redis:
    image: redis:7
    command: redis-server --requirepass "^G#z2v!QeA9pL1uN@k8rS"
    environment:
      - REDIS_PASSWORD=^G#z2v!QeA9pL1uN@k8rS
    ports:
      - "6379:6379"
    networks:
      - app-network
    dns:
      - "8.8.8.8"
      - "8.8.4.4"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - app-network
    dns:
      - "8.8.8.8"
      - "8.8.4.4"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - app-network
    dns:
      - "8.8.8.8"
      - "8.8.4.4"

networks:
  app-network:
    driver: bridge
